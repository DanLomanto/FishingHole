//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Common
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FishEntities : DbContext
    {
        public FishEntities()
            : base("name=FishEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Comment> Comments { get; set; }
        public virtual DbSet<FriendAssociation> FriendAssociations { get; set; }
        public virtual DbSet<ImagePath> ImagePaths { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationToTrip> LocationToTrips { get; set; }
        public virtual DbSet<PendingFriendRequest> PendingFriendRequests { get; set; }
        public virtual DbSet<Thread> Threads { get; set; }
        public virtual DbSet<Trip> Trips { get; set; }
        public virtual DbSet<TripsToPhoto> TripsToPhotos { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<ErrorLog> ErrorLogs { get; set; }
    
        public virtual int CreateFriendAssociation(Nullable<int> primaryUserId, Nullable<int> assocFriendId)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            var assocFriendIdParameter = assocFriendId.HasValue ?
                new ObjectParameter("AssocFriendId", assocFriendId) :
                new ObjectParameter("AssocFriendId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateFriendAssociation", primaryUserIdParameter, assocFriendIdParameter);
        }
    
        public virtual int CreateLocation(Nullable<int> userID, string name, string description, string streetAddress, string cityTown, string state, Nullable<int> zipcode, string lattitudeDirection, Nullable<double> lattitude, string longitudeDirection, Nullable<double> longitude, ObjectParameter output_Result)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var cityTownParameter = cityTown != null ?
                new ObjectParameter("CityTown", cityTown) :
                new ObjectParameter("CityTown", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode.HasValue ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(int));
    
            var lattitudeDirectionParameter = lattitudeDirection != null ?
                new ObjectParameter("LattitudeDirection", lattitudeDirection) :
                new ObjectParameter("LattitudeDirection", typeof(string));
    
            var lattitudeParameter = lattitude.HasValue ?
                new ObjectParameter("Lattitude", lattitude) :
                new ObjectParameter("Lattitude", typeof(double));
    
            var longitudeDirectionParameter = longitudeDirection != null ?
                new ObjectParameter("LongitudeDirection", longitudeDirection) :
                new ObjectParameter("LongitudeDirection", typeof(string));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateLocation", userIDParameter, nameParameter, descriptionParameter, streetAddressParameter, cityTownParameter, stateParameter, zipcodeParameter, lattitudeDirectionParameter, lattitudeParameter, longitudeDirectionParameter, longitudeParameter, output_Result);
        }
    
        public virtual int CreatePendingFriendRequest(Nullable<int> primaryUserId, Nullable<int> assocFriendId)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            var assocFriendIdParameter = assocFriendId.HasValue ?
                new ObjectParameter("AssocFriendId", assocFriendId) :
                new ObjectParameter("AssocFriendId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreatePendingFriendRequest", primaryUserIdParameter, assocFriendIdParameter);
        }
    
        public virtual int CreateTrip(Nullable<int> userID, string title, string description, string targetedSpecies, string waterConditions, string weatherConditions, string dateOfTrip, string fliesLuresUsed, string catchOfTheDay, string otherNotes, ObjectParameter output_Result)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var targetedSpeciesParameter = targetedSpecies != null ?
                new ObjectParameter("TargetedSpecies", targetedSpecies) :
                new ObjectParameter("TargetedSpecies", typeof(string));
    
            var waterConditionsParameter = waterConditions != null ?
                new ObjectParameter("WaterConditions", waterConditions) :
                new ObjectParameter("WaterConditions", typeof(string));
    
            var weatherConditionsParameter = weatherConditions != null ?
                new ObjectParameter("WeatherConditions", weatherConditions) :
                new ObjectParameter("WeatherConditions", typeof(string));
    
            var dateOfTripParameter = dateOfTrip != null ?
                new ObjectParameter("DateOfTrip", dateOfTrip) :
                new ObjectParameter("DateOfTrip", typeof(string));
    
            var fliesLuresUsedParameter = fliesLuresUsed != null ?
                new ObjectParameter("FliesLuresUsed", fliesLuresUsed) :
                new ObjectParameter("FliesLuresUsed", typeof(string));
    
            var catchOfTheDayParameter = catchOfTheDay != null ?
                new ObjectParameter("CatchOfTheDay", catchOfTheDay) :
                new ObjectParameter("CatchOfTheDay", typeof(string));
    
            var otherNotesParameter = otherNotes != null ?
                new ObjectParameter("OtherNotes", otherNotes) :
                new ObjectParameter("OtherNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateTrip", userIDParameter, titleParameter, descriptionParameter, targetedSpeciesParameter, waterConditionsParameter, weatherConditionsParameter, dateOfTripParameter, fliesLuresUsedParameter, catchOfTheDayParameter, otherNotesParameter, output_Result);
        }
    
        public virtual int CreateTripToPhoto(Nullable<int> tripId, Nullable<int> photoId)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            var photoIdParameter = photoId.HasValue ?
                new ObjectParameter("PhotoId", photoId) :
                new ObjectParameter("PhotoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateTripToPhoto", tripIdParameter, photoIdParameter);
        }
    
        public virtual int CreateUpdateLocationToTrip(Nullable<int> tripID, Nullable<int> locationID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUpdateLocationToTrip", tripIDParameter, locationIDParameter);
        }
    
        public virtual int CreateUser(string firstName, string lastName, string email, string password)
        {
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateUser", firstNameParameter, lastNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual int DeleteFriendAssociation(Nullable<int> primaryUserId, Nullable<int> assocFriendId)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            var assocFriendIdParameter = assocFriendId.HasValue ?
                new ObjectParameter("AssocFriendId", assocFriendId) :
                new ObjectParameter("AssocFriendId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFriendAssociation", primaryUserIdParameter, assocFriendIdParameter);
        }
    
        public virtual int DeleteLocation(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLocation", locationIDParameter);
        }
    
        public virtual int DeleteLocationForTrip(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLocationForTrip", tripIDParameter);
        }
    
        public virtual int DeletePendingFriendRequest(Nullable<int> primaryUserId, Nullable<int> assocFriendId)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            var assocFriendIdParameter = assocFriendId.HasValue ?
                new ObjectParameter("AssocFriendId", assocFriendId) :
                new ObjectParameter("AssocFriendId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePendingFriendRequest", primaryUserIdParameter, assocFriendIdParameter);
        }
    
        public virtual int DeletePhoto(Nullable<int> photoId)
        {
            var photoIdParameter = photoId.HasValue ?
                new ObjectParameter("PhotoId", photoId) :
                new ObjectParameter("PhotoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePhoto", photoIdParameter);
        }
    
        public virtual int DeleteTrip(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTrip", tripIDParameter);
        }
    
        public virtual int DeleteTripForLocation(Nullable<int> locationID)
        {
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTripForLocation", locationIDParameter);
        }
    
        public virtual ObjectResult<DoesLoginExist_Result> DoesLoginExist(string email, string password)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DoesLoginExist_Result>("DoesLoginExist", emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> DoesTripTitleExistForUser(Nullable<int> userID, string title)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("DoesTripTitleExistForUser", userIDParameter, titleParameter);
        }
    
        public virtual ObjectResult<GetAllLocationsForUser_Result> GetAllLocationsForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllLocationsForUser_Result>("GetAllLocationsForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetAllThreads_Result> GetAllThreads()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllThreads_Result>("GetAllThreads");
        }
    
        public virtual ObjectResult<GetAllTripsForUser_Result> GetAllTripsForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTripsForUser_Result>("GetAllTripsForUser", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAssociatedLocationForTrip(Nullable<int> tripID)
        {
            var tripIDParameter = tripID.HasValue ?
                new ObjectParameter("TripID", tripID) :
                new ObjectParameter("TripID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAssociatedLocationForTrip", tripIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetAssociatedTripForLocation(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetAssociatedTripForLocation", locationIdParameter);
        }
    
        public virtual ObjectResult<GetCommentsForThread_Result> GetCommentsForThread(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCommentsForThread_Result>("GetCommentsForThread", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetFriendRequestsForUser(Nullable<int> primaryUserId)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetFriendRequestsForUser", primaryUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetFriendsForUser(Nullable<int> primaryUserId)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetFriendsForUser", primaryUserIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetIdOfCategory(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetIdOfCategory", categoryParameter);
        }
    
        public virtual ObjectResult<GetImagesForUser_Result> GetImagesForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetImagesForUser_Result>("GetImagesForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetLocation_Result> GetLocation(Nullable<int> userID, string name)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocation_Result>("GetLocation", userIDParameter, nameParameter);
        }
    
        public virtual ObjectResult<GetLocationById_Result> GetLocationById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationById_Result>("GetLocationById", iDParameter);
        }
    
        public virtual ObjectResult<GetPhotosForTrip_Result> GetPhotosForTrip(Nullable<int> tripId)
        {
            var tripIdParameter = tripId.HasValue ?
                new ObjectParameter("TripId", tripId) :
                new ObjectParameter("TripId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPhotosForTrip_Result>("GetPhotosForTrip", tripIdParameter);
        }
    
        public virtual ObjectResult<GetSharedLocationsForUser_Result> GetSharedLocationsForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSharedLocationsForUser_Result>("GetSharedLocationsForUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetThreadById_Result> GetThreadById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetThreadById_Result>("GetThreadById", iDParameter);
        }
    
        public virtual ObjectResult<string> GetThreadCategoryById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetThreadCategoryById", iDParameter);
        }
    
        public virtual ObjectResult<string> GetTopicNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTopicNames");
        }
    
        public virtual ObjectResult<GetTrip_Result> GetTrip(Nullable<int> userID, string title)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTrip_Result>("GetTrip", userIDParameter, titleParameter);
        }
    
        public virtual ObjectResult<GetTripById_Result> GetTripById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTripById_Result>("GetTripById", iDParameter);
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser", emailParameter);
        }
    
        public virtual ObjectResult<GetUserById_Result> GetUserById(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserById_Result>("GetUserById", iDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> GetViewStatusOfLocation(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("GetViewStatusOfLocation", locationIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> HowManyUnviewedSharedLocationsForUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("HowManyUnviewedSharedLocationsForUser", userIDParameter);
        }
    
        public virtual int InsertImagePath(Nullable<int> userID, string imagePath, ObjectParameter output_Result)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var imagePathParameter = imagePath != null ?
                new ObjectParameter("ImagePath", imagePath) :
                new ObjectParameter("ImagePath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertImagePath", userIDParameter, imagePathParameter, output_Result);
        }
    
        public virtual int InsertThread(string title, string message, Nullable<int> userId, Nullable<int> threadCategory)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var threadCategoryParameter = threadCategory.HasValue ?
                new ObjectParameter("ThreadCategory", threadCategory) :
                new ObjectParameter("ThreadCategory", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertThread", titleParameter, messageParameter, userIdParameter, threadCategoryParameter);
        }
    
        public virtual int InsertThreadComment(string comment, Nullable<int> userId, Nullable<int> threadId, Nullable<int> locationID)
        {
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var threadIdParameter = threadId.HasValue ?
                new ObjectParameter("ThreadId", threadId) :
                new ObjectParameter("ThreadId", typeof(int));
    
            var locationIDParameter = locationID.HasValue ?
                new ObjectParameter("LocationID", locationID) :
                new ObjectParameter("LocationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertThreadComment", commentParameter, userIdParameter, threadIdParameter, locationIDParameter);
        }
    
        public virtual int MarkLocationAsViewed(Nullable<int> locationId)
        {
            var locationIdParameter = locationId.HasValue ?
                new ObjectParameter("LocationId", locationId) :
                new ObjectParameter("LocationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MarkLocationAsViewed", locationIdParameter);
        }
    
        public virtual ObjectResult<SearchForThreadsByCategory_Result> SearchForThreadsByCategory(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchForThreadsByCategory_Result>("SearchForThreadsByCategory", categoryParameter);
        }
    
        public virtual ObjectResult<SearchForUsers_Result> SearchForUsers(Nullable<int> primaryUserId, string searchText)
        {
            var primaryUserIdParameter = primaryUserId.HasValue ?
                new ObjectParameter("PrimaryUserId", primaryUserId) :
                new ObjectParameter("PrimaryUserId", typeof(int));
    
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchForUsers_Result>("SearchForUsers", primaryUserIdParameter, searchTextParameter);
        }
    
        public virtual ObjectResult<SearchThreads_Result> SearchThreads(string searchText)
        {
            var searchTextParameter = searchText != null ?
                new ObjectParameter("SearchText", searchText) :
                new ObjectParameter("SearchText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SearchThreads_Result>("SearchThreads", searchTextParameter);
        }
    
        public virtual int ShareLocation(Nullable<int> locationIdToShare, Nullable<int> userIdToShareTo)
        {
            var locationIdToShareParameter = locationIdToShare.HasValue ?
                new ObjectParameter("LocationIdToShare", locationIdToShare) :
                new ObjectParameter("LocationIdToShare", typeof(int));
    
            var userIdToShareToParameter = userIdToShareTo.HasValue ?
                new ObjectParameter("UserIdToShareTo", userIdToShareTo) :
                new ObjectParameter("UserIdToShareTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ShareLocation", locationIdToShareParameter, userIdToShareToParameter);
        }
    
        public virtual int UpdateLocation(Nullable<int> iD, string name, string description, string streetAddress, string cityTown, string state, Nullable<int> zipcode, string lattitudeDirection, Nullable<double> lattitude, string longitudeDirection, Nullable<double> longitude)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var streetAddressParameter = streetAddress != null ?
                new ObjectParameter("StreetAddress", streetAddress) :
                new ObjectParameter("StreetAddress", typeof(string));
    
            var cityTownParameter = cityTown != null ?
                new ObjectParameter("CityTown", cityTown) :
                new ObjectParameter("CityTown", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var zipcodeParameter = zipcode.HasValue ?
                new ObjectParameter("Zipcode", zipcode) :
                new ObjectParameter("Zipcode", typeof(int));
    
            var lattitudeDirectionParameter = lattitudeDirection != null ?
                new ObjectParameter("LattitudeDirection", lattitudeDirection) :
                new ObjectParameter("LattitudeDirection", typeof(string));
    
            var lattitudeParameter = lattitude.HasValue ?
                new ObjectParameter("Lattitude", lattitude) :
                new ObjectParameter("Lattitude", typeof(double));
    
            var longitudeDirectionParameter = longitudeDirection != null ?
                new ObjectParameter("LongitudeDirection", longitudeDirection) :
                new ObjectParameter("LongitudeDirection", typeof(string));
    
            var longitudeParameter = longitude.HasValue ?
                new ObjectParameter("Longitude", longitude) :
                new ObjectParameter("Longitude", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLocation", iDParameter, nameParameter, descriptionParameter, streetAddressParameter, cityTownParameter, stateParameter, zipcodeParameter, lattitudeDirectionParameter, lattitudeParameter, longitudeDirectionParameter, longitudeParameter);
        }
    
        public virtual int UpdateTrip(Nullable<int> iD, string title, string description, string targetedSpecies, string waterConditions, string weatherConditions, string dateOfTrip, string fliesLuresUsed, string catchOfTheDay, string otherNotes)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var targetedSpeciesParameter = targetedSpecies != null ?
                new ObjectParameter("TargetedSpecies", targetedSpecies) :
                new ObjectParameter("TargetedSpecies", typeof(string));
    
            var waterConditionsParameter = waterConditions != null ?
                new ObjectParameter("WaterConditions", waterConditions) :
                new ObjectParameter("WaterConditions", typeof(string));
    
            var weatherConditionsParameter = weatherConditions != null ?
                new ObjectParameter("WeatherConditions", weatherConditions) :
                new ObjectParameter("WeatherConditions", typeof(string));
    
            var dateOfTripParameter = dateOfTrip != null ?
                new ObjectParameter("DateOfTrip", dateOfTrip) :
                new ObjectParameter("DateOfTrip", typeof(string));
    
            var fliesLuresUsedParameter = fliesLuresUsed != null ?
                new ObjectParameter("FliesLuresUsed", fliesLuresUsed) :
                new ObjectParameter("FliesLuresUsed", typeof(string));
    
            var catchOfTheDayParameter = catchOfTheDay != null ?
                new ObjectParameter("CatchOfTheDay", catchOfTheDay) :
                new ObjectParameter("CatchOfTheDay", typeof(string));
    
            var otherNotesParameter = otherNotes != null ?
                new ObjectParameter("OtherNotes", otherNotes) :
                new ObjectParameter("OtherNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTrip", iDParameter, titleParameter, descriptionParameter, targetedSpeciesParameter, waterConditionsParameter, weatherConditionsParameter, dateOfTripParameter, fliesLuresUsedParameter, catchOfTheDayParameter, otherNotesParameter);
        }
    
        public virtual int CreateError(string referringPage, string errorText)
        {
            var referringPageParameter = referringPage != null ?
                new ObjectParameter("ReferringPage", referringPage) :
                new ObjectParameter("ReferringPage", typeof(string));
    
            var errorTextParameter = errorText != null ?
                new ObjectParameter("ErrorText", errorText) :
                new ObjectParameter("ErrorText", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateError", referringPageParameter, errorTextParameter);
        }
    }
}
